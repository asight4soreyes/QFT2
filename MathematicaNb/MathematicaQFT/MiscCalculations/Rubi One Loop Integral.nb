(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    278272,       6655]
NotebookOptionsPosition[    275919,       6607]
NotebookOutlinePosition[    276292,       6623]
CellTagsIndexPosition[    276249,       6620]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", "Rubi`"}]], "Input",
 CellChangeTimes->{{3.768260766893233*^9, 3.768260771575885*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c5fe284c-1ffc-429f-b925-f471ee07243d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Steps", "[", 
  RowBox[{"Int", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Log", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", "x", " ", 
         SuperscriptBox["\[Beta]", "2"], 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}]}], "+", "1", "-", 
        SuperscriptBox["\[Beta]", "2"]}], ")"}], "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", "x", " ", 
        SuperscriptBox["\[Beta]", "2"], 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}], "+", "1", "-", 
       SuperscriptBox["\[Beta]", "2"]}], ")"}]], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7682608029227*^9, 3.7682608183484883`*^9}, {
  3.7682608784488072`*^9, 3.7682608968129835`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"72fe0721-199a-4e93-8ea6-1b3c0c02f966"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["Px", "n"]}], ")"}], "Qx"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"u", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["Px", "n"]}], ")"}]}], "-", 
                    FormBox[
                    TagBox[
                    RowBox[{"n", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"SimplifyIntegrand", "(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"u", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", "Px"}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> 
                    None]}], "Px"], ",", "x"}], ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
                    TraditionalForm]}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2607", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \
\\!\\(\\*RowBox[{RowBox[{\\\"QuadraticQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{\\\"Qx\\\", \\\",\\\", \\\"Px\\\"}], \\\"}\\\"}], \\\",\\\", \\\
\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"EqQ\\\", \\\"[\\\", \
RowBox[{RowBox[{SubscriptBox[\\\"\[PartialD]\\\", RowBox[{\\\"x\\\"}]], \
FractionBox[\\\"Px\\\", \\\"Qx\\\"]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}]}]\\) let \\!\\(\\*RowBox[{\\\"u\\\", \\\"=\\\", \
RowBox[{\\\"IntHide\\\", \\\"[\\\", RowBox[{FractionBox[\\\"1\\\", \
\\\"Qx\\\"], \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]\\), then\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["Px", "n"]}], ")"}], "Qx"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"u", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["Px", "n"]}], ")"}]}], "-", 
                    FormBox[
                    TagBox[
                    RowBox[{"n", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"SimplifyIntegrand", "(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"u", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", "Px"}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> 
                    None]}], "Px"], ",", "x"}], ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
                    TraditionalForm]}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "4"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "-", 
                RowBox[{"Int", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    ")"}]}], 
                   RowBox[{"1", "-", 
                    SuperscriptBox["\[Beta]", "2"], "+", 
                    RowBox[{"4", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], ",", "x"}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[(Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] - 
            Rubi`Int[(((1 - 2 $CellContext`x) $CellContext`\[Beta])/(
              1 - $CellContext`\[Beta]^2 + (
                4 $CellContext`x) $CellContext`\[Beta]^2 - (
               4 $CellContext`x^2) $CellContext`\[Beta]^2)) (-
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] + 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]]), $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = True}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["12", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"!\\\", \
RowBox[{\\\"MatchQ\\\", \\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"b_\\\", \\\" \\\", \\\"v_\\\"}], \\\"/;\\\", \
RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{\\\"b\\\", \\\",\\\", \\\"x\\\"}], \
\\\"]\\\"}]}]}], \\\"]\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "4"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "-", 
                RowBox[{"Dist", "[", 
                 RowBox[{"\[Beta]", ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    ")"}]}], 
                    RowBox[{"1", "-", 
                    SuperscriptBox["\[Beta]", "2"], "+", 
                    RowBox[{"4", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[(Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] - Rubi`Dist[$CellContext`\[Beta], 
             
             Rubi`Int[((1 - 2 $CellContext`x)/(
               1 - $CellContext`\[Beta]^2 + (
                 4 $CellContext`x) $CellContext`\[Beta]^2 - (
                4 $CellContext`x^2) $CellContext`\[Beta]^2)) (-
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] + 
               Log[1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]]), $CellContext`x], \
$CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["u", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}], "+", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["6860", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"EqQ\\\", \
\\\"[\\\", RowBox[{\\\"n2\\\", \\\",\\\", RowBox[{\\\"2\\\", \\\" \\\", \\\"n\
\\\"}]}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"IGtQ\\\", \\\"[\\\", \
RowBox[{\\\"n\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}]\\) let \
\\!\\(\\*RowBox[{\\\"v\\\", \\\"=\\\", \
RowBox[{\\\"RationalFunctionExpand\\\", \\\"[\\\", \
RowBox[{FractionBox[\\\"u\\\", RowBox[{\\\"a\\\", \\\"+\\\", \
RowBox[{\\\"b\\\", \\\" \\\", SuperscriptBox[\\\"x\\\", \\\"n\\\"]}], \\\"+\\\
\", RowBox[{\\\"c\\\", \\\" \\\", SuperscriptBox[\\\"x\\\", \
RowBox[{\\\"2\\\", \\\" \\\", \\\"n\\\"}]]}]}]], \\\",\\\", \\\"x\\\"}], \
\\\"]\\\"}]}]\\), then if \\!\\(\\*RowBox[{\\\"SumQ\\\", \\\"[\\\", \
\\\"v\\\", \\\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["u", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}], "+", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "4"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "-", 
                RowBox[{"Dist", "[", 
                 RowBox[{"\[Beta]", ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Beta]", "2"], "-", 
                    RowBox[{"4", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]]}], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Beta]", "2"], "-", 
                    RowBox[{"4", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]]}], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[(Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] - Rubi`Dist[$CellContext`\[Beta], 
             
             Rubi`Int[((-(-1 + 
                  2 $CellContext`x))/(-1 + $CellContext`\[Beta]^2 - (
                 4 $CellContext`x) $CellContext`\[Beta]^2 + (
                  4 $CellContext`x^2) $CellContext`\[Beta]^2)) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] + ((-1 + 
                 2 $CellContext`x)/(-1 + $CellContext`\[Beta]^2 - (
                 4 $CellContext`x) $CellContext`\[Beta]^2 + (
                  4 $CellContext`x^2) $CellContext`\[Beta]^2)) 
               Log[1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"General\"\>", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "4"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "+", 
                RowBox[{"Dist", "[", 
                 RowBox[{"\[Beta]", ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Beta]", "2"], "-", 
                    RowBox[{"4", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}], "-", 
                RowBox[{"Dist", "[", 
                 RowBox[{"\[Beta]", ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[Beta]", "2"], "-", 
                    RowBox[{"4", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[(Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[$CellContext`\[Beta], 
              
              Rubi`Int[((-1 + 
                 2 $CellContext`x)/(-1 + $CellContext`\[Beta]^2 - (
                 4 $CellContext`x) $CellContext`\[Beta]^2 + (
                  4 $CellContext`x^2) $CellContext`\[Beta]^2)) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] - Rubi`Dist[$CellContext`\[Beta], 
             
             Rubi`Int[((-1 + 
                2 $CellContext`x)/(-1 + $CellContext`\[Beta]^2 - (
                4 $CellContext`x) $CellContext`\[Beta]^2 + (
                 4 $CellContext`x^2) $CellContext`\[Beta]^2)) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], ")"}], "p"], " ", "RFx"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2465", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \
\\!\\(\\*RowBox[{RowBox[{\\\"RationalFunctionQ\\\", \\\"[\\\", \
RowBox[{\\\"RFx\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"IntegerQ\\\", \\\"[\\\", \\\"p\\\", \\\"]\\\"}]}]\\) let \
\\!\\(\\*RowBox[{\\\"u\\\", \\\"=\\\", RowBox[{\\\"ExpandIntegrand\\\", \\\"[\
\\\", RowBox[{SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"a\\\", \\\"+\\\", \
RowBox[{\\\"b\\\", \\\" \\\", RowBox[{\\\"Log\\\", \\\"[\\\", RowBox[{\\\"c\\\
\", \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"d\\\", \
\\\"+\\\", RowBox[{\\\"e\\\", \\\" \\\", \\\"x\\\"}]}], \\\")\\\"}], \
\\\"n\\\"]}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\"p\\\"], \\\",\\\", \
\\\"RFx\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]\\), then if \
\\!\\(\\*RowBox[{\\\"SumQ\\\", \\\"[\\\", \\\"u\\\", \\\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], ")"}], "p"], " ", "RFx"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], ")"}], "p"], " ", "RFx"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2465", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \
\\!\\(\\*RowBox[{RowBox[{\\\"RationalFunctionQ\\\", \\\"[\\\", \
RowBox[{\\\"RFx\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"IntegerQ\\\", \\\"[\\\", \\\"p\\\", \\\"]\\\"}]}]\\) let \
\\!\\(\\*RowBox[{\\\"u\\\", \\\"=\\\", RowBox[{\\\"ExpandIntegrand\\\", \\\"[\
\\\", RowBox[{SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"a\\\", \\\"+\\\", \
RowBox[{\\\"b\\\", \\\" \\\", RowBox[{\\\"Log\\\", \\\"[\\\", RowBox[{\\\"c\\\
\", \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"d\\\", \
\\\"+\\\", RowBox[{\\\"e\\\", \\\" \\\", \\\"x\\\"}]}], \\\")\\\"}], \
\\\"n\\\"]}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\"p\\\"], \\\",\\\", \
\\\"RFx\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]\\), then if \
\\!\\(\\*RowBox[{\\\"SumQ\\\", \\\"[\\\", \\\"u\\\", \\\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], ")"}], "p"], " ", "RFx"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "4"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "+", 
                RowBox[{"Dist", "[", 
                 RowBox[{"\[Beta]", ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], "+", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    RowBox[{
                    RowBox[{"4", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]]}], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}], "-", 
                RowBox[{"Dist", "[", 
                 RowBox[{"\[Beta]", ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], "+", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                    RowBox[{
                    RowBox[{"4", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]]}], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[(Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (
                   1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[$CellContext`\[Beta], 
              
              Rubi`Int[(2/((-4) $CellContext`\[Beta] - 
                 4 $CellContext`\[Beta]^2 + (
                   8 $CellContext`x) $CellContext`\[Beta]^2)) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] + (2/(
                 4 $CellContext`\[Beta] - 
                 4 $CellContext`\[Beta]^2 + (
                   8 $CellContext`x) $CellContext`\[Beta]^2)) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] - Rubi`Dist[$CellContext`\[Beta], 
             
             Rubi`Int[(2/((-4) $CellContext`\[Beta] - 
                4 $CellContext`\[Beta]^2 + (
                  8 $CellContext`x) $CellContext`\[Beta]^2)) 
               Log[1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]] + (2/(
                4 $CellContext`\[Beta] - 
                4 $CellContext`\[Beta]^2 + (
                  8 $CellContext`x) $CellContext`\[Beta]^2)) 
               Log[1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"General\"\>", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"General\"\>", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "4"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "+", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Beta]"}], ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}], "+", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Beta]"}], ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    RowBox[{
                    RowBox[{"4", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}], "-", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Beta]"}], ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}], "-", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Beta]"}], ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    RowBox[{
                    RowBox[{"4", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}]], ",", "x"}], "]"}], 
                  ",", "x"}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[(Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[2 $CellContext`\[Beta], 
              
              Rubi`Int[((-4) $CellContext`\[Beta] - 
                 4 $CellContext`\[Beta]^2 + (
                   8 $CellContext`x) $CellContext`\[Beta]^2)^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] + Rubi`Dist[2 $CellContext`\[Beta], 
              
              Rubi`Int[(4 $CellContext`\[Beta] - 
                 4 $CellContext`\[Beta]^2 + (
                   8 $CellContext`x) $CellContext`\[Beta]^2)^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] - Rubi`Dist[2 $CellContext`\[Beta], 
             
             Rubi`Int[((-4) $CellContext`\[Beta] - 
                4 $CellContext`\[Beta]^2 + (
                  8 $CellContext`x) $CellContext`\[Beta]^2)^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] - Rubi`Dist[2 $CellContext`\[Beta], 
             
             Rubi`Int[(4 $CellContext`\[Beta] - 
                4 $CellContext`\[Beta]^2 + (
                  8 $CellContext`x) $CellContext`\[Beta]^2)^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], ")"}], "p"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}], "q"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"f", " ", "x"}], "d"], ")"}], "q"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}]}], ")"}], "e"], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2437", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"EqQ\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"e\\\", \\\" \\\", \\\"f\\\"}], \\\"-\\\", \
RowBox[{\\\"d\\\", \\\" \\\", \\\"g\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], ")"}], "p"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}], "q"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"f", " ", "x"}], "d"], ")"}], "q"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}]}], ")"}], "e"], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    FractionBox[
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"e", " ", "f"}], "-", 
                    RowBox[{"d", " ", "g"}]}]], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}]}]}], 
                    ")"}]}], "g"], "-", 
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"b", " ", "e", " ", "n"}], ")"}], " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    FractionBox[
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"e", " ", "f"}], "-", 
                    RowBox[{"d", " ", "g"}]}]], ")"}], 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "g"], HoldForm], 
                    TraditionalForm]}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2441", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"NeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"e\\\", \\\" \\\", \\\"f\\\"}], \\\"-\\\", \
RowBox[{\\\"d\\\", \\\" \\\", \\\"g\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    FractionBox[
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"e", " ", "f"}], "-", 
                    RowBox[{"d", " ", "g"}]}]], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}]}]}], 
                    ")"}]}], "g"], "-", 
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"b", " ", "e", " ", "n"}], ")"}], " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    FractionBox[
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"e", " ", "f"}], "-", 
                    RowBox[{"d", " ", "g"}]}]], ")"}], 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "g"], HoldForm], 
                    TraditionalForm]}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    FractionBox[
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"e", " ", "f"}], "-", 
                    RowBox[{"d", " ", "g"}]}]], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}]}]}], 
                    ")"}]}], "g"], "-", 
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"b", " ", "e", " ", "n"}], ")"}], " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    FractionBox[
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"e", " ", "f"}], "-", 
                    RowBox[{"d", " ", "g"}]}]], ")"}], 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "g"], HoldForm], 
                    TraditionalForm]}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2441", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"NeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"e\\\", \\\" \\\", \\\"f\\\"}], \\\"-\\\", \
RowBox[{\\\"d\\\", \\\" \\\", \\\"g\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    FractionBox[
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"e", " ", "f"}], "-", 
                    RowBox[{"d", " ", "g"}]}]], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}]}]}], 
                    ")"}]}], "g"], "-", 
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"b", " ", "e", " ", "n"}], ")"}], " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    FractionBox[
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"e", " ", "f"}], "-", 
                    RowBox[{"d", " ", "g"}]}]], ")"}], 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "g"], HoldForm], 
                    TraditionalForm]}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], ")"}], "p"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}], "q"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"f", " ", "x"}], "d"], ")"}], "q"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}]}], ")"}], "e"], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2437", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"EqQ\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"e\\\", \\\" \\\", \\\"f\\\"}], \\\"-\\\", \
RowBox[{\\\"d\\\", \\\" \\\", \\\"g\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}], "n"]}], ")"}], " ", 
                    "b"}]}], ")"}], "p"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}], ")"}], "q"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"f", " ", "x"}], "d"], ")"}], "q"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}]}], ")"}], "e"], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], " ", 
                  RowBox[{"Log", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], 
                   "]"}]}], 
                 RowBox[{"4", " ", "\[Beta]"}]], "-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}],
                   " ", 
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                 RowBox[{"4", " ", "\[Beta]"}]], "-", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "+", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  FractionBox["1", "2"], ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"2", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}]], "]"}], 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}]], ",", "x"}], 
                   "]"}], ",", "x"}], "]"}], "+", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  FractionBox["1", "2"], ",", 
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Beta]"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}]]}], "]"}], 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}]], ",", "x"}], 
                   "]"}], ",", "x"}], "]"}], "-", 
                RowBox[{"Subst", "[", 
                 RowBox[{
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"Log", "[", "x", "]"}]}], 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]], ",", "x"}], 
                   "]"}], ",", "x", ",", 
                  RowBox[{"1", "+", "\[Beta]", "-", 
                   RowBox[{"2", " ", "x", " ", "\[Beta]"}]}]}], "]"}], "-", 
                RowBox[{"Subst", "[", 
                 RowBox[{
                  RowBox[{"Int", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"Log", "[", "x", "]"}]}], 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]], ",", "x"}], 
                   "]"}], ",", "x", ",", 
                  RowBox[{"1", "-", "\[Beta]", "+", 
                   RowBox[{"2", " ", "x", " ", "\[Beta]"}]}]}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[((Rational[1, 4]/$CellContext`\[Beta]) 
              Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]]) 
             Log[Rational[1, 2] (
                1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta])] + ((
               Rational[-1, 4]/$CellContext`\[Beta]) 
              Log[Rational[1, 2] (
                 1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta])]) 
             Log[1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta]] + (
              Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[
              Rational[1, 2], 
              
              Rubi`Int[(
                 1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta])^(-1) 
               Log[(2 $CellContext`\[Beta]) (((-4) $CellContext`\[Beta] - 
                   4 $CellContext`\[Beta]^2 + (
                    8 $CellContext`x) $CellContext`\[Beta]^2)/(((-8) (
                    1 - $CellContext`\[Beta])) $CellContext`\[Beta]^2 + (
                    2 $CellContext`\[Beta]) ((-4) $CellContext`\[Beta] - 
                    4 $CellContext`\[Beta]^2)))], $CellContext`x], \
$CellContext`x] + Rubi`Dist[
              Rational[1, 2], 
              
              Rubi`Int[(
                 1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta])^(-1) 
               Log[((-2) $CellContext`\[Beta]) ((4 $CellContext`\[Beta] - 
                   4 $CellContext`\[Beta]^2 + (
                    8 $CellContext`x) $CellContext`\[Beta]^2)/(((-8) \
$CellContext`\[Beta]^2) (1 + $CellContext`\[Beta]) - (
                   2 $CellContext`\[Beta]) (4 $CellContext`\[Beta] - 
                   4 $CellContext`\[Beta]^2)))], $CellContext`x], \
$CellContext`x] - Rubi`Subst[
             
             Rubi`Int[(($CellContext`x^(-1) (
                 1 + $CellContext`\[Beta]))/((-4) $CellContext`\[Beta] - 
               4 $CellContext`\[Beta]^2)) 
              Log[$CellContext`x], $CellContext`x], $CellContext`x, 
             1 + $CellContext`\[Beta] - (
              2 $CellContext`x) $CellContext`\[Beta]] - Rubi`Subst[
             
             Rubi`Int[(($CellContext`x^(-1) (1 - $CellContext`\[Beta]))/(
               4 $CellContext`\[Beta] - 4 $CellContext`\[Beta]^2)) 
              Log[$CellContext`x], $CellContext`x], $CellContext`x, 
             1 - $CellContext`\[Beta] + (
               2 $CellContext`x) $CellContext`\[Beta]]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}]}], ")"}], " ", "b"}]}], 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"c", " ", "e", " ", "x"}], "g"]}], ")"}]}]}], 
                    "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]}], ")"}], "g"], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2440", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"NeQ\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"e\\\", \\\" \\\", \\\"f\\\"}], \\\"-\\\
\", RowBox[{\\\"d\\\", \\\" \\\", \\\"g\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"EqQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"g\\\", \\\"+\\\", RowBox[{\\\"c\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"e\\\", \\\" \\\", \\\"f\\\"}], \\\"-\\\
\", RowBox[{\\\"d\\\", \\\" \\\", \\\"g\\\"}]}], \\\")\\\"}]}]}], \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}]}], ")"}], " ", "b"}]}], 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"c", " ", "e", " ", "x"}], "g"]}], ")"}]}]}], 
                    "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]}], ")"}], "g"], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}]}], ")"}], " ", "b"}]}], 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"c", " ", "e", " ", "x"}], "g"]}], ")"}]}]}], 
                    "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]}], ")"}], "g"], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2440", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"NeQ\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"e\\\", \\\" \\\", \\\"f\\\"}], \\\"-\\\
\", RowBox[{\\\"d\\\", \\\" \\\", \\\"g\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"EqQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"g\\\", \\\"+\\\", RowBox[{\\\"c\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"e\\\", \\\" \\\", \\\"f\\\"}], \\\"-\\\
\", RowBox[{\\\"d\\\", \\\" \\\", \\\"g\\\"}]}], \\\")\\\"}]}]}], \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", "x"}]}], ")"}]}], ")"}], " ", "b"}]}], 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"c", " ", "e", " ", "x"}], "g"]}], ")"}]}]}], 
                    "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    RowBox[{"f", "+", 
                    RowBox[{"g", " ", "x"}]}]}], ")"}], "g"], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["12", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"!\\\", \
RowBox[{\\\"MatchQ\\\", \\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"b_\\\", \\\" \\\", \\\"v_\\\"}], \\\"/;\\\", \
RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{\\\"b\\\", \\\",\\\", \\\"x\\\"}], \
\\\"]\\\"}]}]}], \\\"]\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["12", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"!\\\", \
RowBox[{\\\"MatchQ\\\", \\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"b_\\\", \\\" \\\", \\\"v_\\\"}], \\\"/;\\\", \
RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{\\\"b\\\", \\\",\\\", \\\"x\\\"}], \
\\\"]\\\"}]}]}], \\\"]\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], " ", 
                  RowBox[{"Log", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], 
                   "]"}]}], 
                 RowBox[{"4", " ", "\[Beta]"}]], "-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}],
                   " ", 
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                 RowBox[{"4", " ", "\[Beta]"}]], "-", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "+", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"4", " ", "\[Beta]"}]], ",", 
                  RowBox[{"Subst", "[", 
                   RowBox[{
                    RowBox[{"Int", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", "x", "]"}], "x"], ",", "x"}], "]"}], 
                    ",", "x", ",", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}]}], "]"}], ",", 
                  "x"}], "]"}], "-", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"4", " ", "\[Beta]"}]], ",", 
                  RowBox[{"Subst", "[", 
                   RowBox[{
                    RowBox[{"Int", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", "x", "]"}], "x"], ",", "x"}], "]"}], 
                    ",", "x", ",", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}]}], "]"}], ",", 
                  "x"}], "]"}], "+", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"4", " ", "\[Beta]"}]], ",", 
                  RowBox[{"Subst", "[", 
                   RowBox[{
                    RowBox[{"Int", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"2", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}]]}], "]"}], 
                    "x"], ",", "x"}], "]"}], ",", "x", ",", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}]}], "]"}], ",", 
                  "x"}], "]"}], "-", 
                RowBox[{"Dist", "[", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"4", " ", "\[Beta]"}]], ",", 
                  RowBox[{"Subst", "[", 
                   RowBox[{
                    RowBox[{"Int", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"8", " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Beta]"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}]]}], "]"}], 
                    "x"], ",", "x"}], "]"}], ",", "x", ",", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}]}], "]"}], ",", 
                  "x"}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[((Rational[1, 4]/$CellContext`\[Beta]) 
              Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]]) 
             Log[Rational[1, 2] (
                1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta])] + ((
               Rational[-1, 4]/$CellContext`\[Beta]) 
              Log[Rational[1, 2] (
                 1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta])]) 
             Log[1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta]] + (
              Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[Rational[1, 4]/$CellContext`\[Beta], 
              Rubi`Subst[
               
               Rubi`Int[$CellContext`x^(-1) 
                Log[$CellContext`x], $CellContext`x], $CellContext`x, 
               1 + $CellContext`\[Beta] - (
                2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x] - 
            Rubi`Dist[Rational[1, 4]/$CellContext`\[Beta], 
             Rubi`Subst[
              
              Rubi`Int[$CellContext`x^(-1) 
               Log[$CellContext`x], $CellContext`x], $CellContext`x, 
              1 - $CellContext`\[Beta] + (
                2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x] + 
            Rubi`Dist[Rational[1, 4]/$CellContext`\[Beta], 
              Rubi`Subst[
               
               Rubi`Int[$CellContext`x^(-1) 
                Log[1 + (
                    8 $CellContext`x) ($CellContext`\[Beta]^2/(((-8) (
                    1 - $CellContext`\[Beta])) $CellContext`\[Beta]^2 + (
                    2 $CellContext`\[Beta]) ((-4) $CellContext`\[Beta] - 
                    4 $CellContext`\[Beta]^2)))], $CellContext`x], \
$CellContext`x, 
               1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x] - 
            Rubi`Dist[Rational[1, 4]/$CellContext`\[Beta], 
             Rubi`Subst[
              
              Rubi`Int[$CellContext`x^(-1) 
               Log[1 + (
                   8 $CellContext`x) ($CellContext`\[Beta]^2/(((-8) \
$CellContext`\[Beta]^2) (1 + $CellContext`\[Beta]) - (
                    2 $CellContext`\[Beta]) (4 $CellContext`\[Beta] - 
                    4 $CellContext`\[Beta]^2)))], $CellContext`x], \
$CellContext`x, 
              1 + $CellContext`\[Beta] - (
               2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}], " ", "b"}]}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}], ")"}], "2"], 
                    RowBox[{"2", " ", "b", " ", "n"}]], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2338", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}], " ", "b"}]}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}], ")"}], "2"], 
                    RowBox[{"2", " ", "b", " ", "n"}]], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}], " ", "b"}]}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}], ")"}], "2"], 
                    RowBox[{"2", " ", "b", " ", "n"}]], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2338", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", "+", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}], " ", "b"}]}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}], ")"}], "2"], 
                    RowBox[{"2", " ", "b", " ", "n"}]], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}]}], ")"}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"-", 
                    FractionBox[
                    TemplateBox[{"2", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"c", " ", "e", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}, "PolyLog"], "n"]}], 
                    HoldForm], TraditionalForm], TraditionalForm, Editable -> 
                  True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2438", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"EqQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"c\\\", \\\" \\\", \\\"d\\\"}], \\\",\\\", \\\"1\\\"}], \\\
\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}]}], ")"}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"-", 
                    FractionBox[
                    TemplateBox[{"2", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"c", " ", "e", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}, "PolyLog"], "n"]}], 
                    HoldForm], TraditionalForm], TraditionalForm, Editable -> 
                    True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}]}], ")"}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                "\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"-", 
                    FractionBox[
                    TemplateBox[{"2", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"c", " ", "e", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}, "PolyLog"], "n"]}], 
                    HoldForm], TraditionalForm], TraditionalForm, Editable -> 
                  True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2438", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{\\\"EqQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"c\\\", \\\" \\\", \\\"d\\\"}], \\\",\\\", \\\"1\\\"}], \\\
\"]\\\"}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    RowBox[{"e", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}]}], ")"}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    "\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False],StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"-", 
                    FractionBox[
                    TemplateBox[{"2", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"c", " ", "e", " ", 
                    SuperscriptBox["x", "n"]}], ")"}]}]}, "PolyLog"], "n"]}], 
                    HoldForm], TraditionalForm], TraditionalForm, Editable -> 
                    True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    TemplateBox[{10}, "Spacer1"], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"Log", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]"}]}], 
                    "]"}], "2"], 
                  RowBox[{"8", " ", "\[Beta]"}]]}], "+", 
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "2"], 
                 RowBox[{"8", " ", "\[Beta]"}]], "+", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], " ", 
                  RowBox[{"Log", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], 
                   "]"}]}], 
                 RowBox[{"4", " ", "\[Beta]"}]], "-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}],
                   " ", 
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
                 RowBox[{"4", " ", "\[Beta]"}]], "-", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"], "-", 
                   FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Beta]", "+", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], 
                    "\[Beta]"]}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Beta]", "2"], "+", 
                   RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
                    SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "-", 
                FractionBox[
                 RowBox[{"PolyLog", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{
                    FractionBox["1", "2"], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]"}]}]}], 
                  "]"}], 
                 RowBox[{"4", " ", "\[Beta]"}]], "+", 
                FractionBox[
                 RowBox[{"PolyLog", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[Beta]", "-", 
                    RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}]}], 
                  "]"}], 
                 RowBox[{"4", " ", "\[Beta]"}]]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[(Rational[-1, 8]/$CellContext`\[Beta]) 
             Log[1 - (1 - 2 $CellContext`x) $CellContext`\[Beta]]^2 + (
              Rational[1, 8]/$CellContext`\[Beta]) 
             Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]]^2 + ((
               Rational[1, 4]/$CellContext`\[Beta]) 
              Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]]) 
             Log[Rational[1, 2] (
                1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta])] + ((
               Rational[-1, 4]/$CellContext`\[Beta]) 
              Log[Rational[1, 2] (
                 1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta])]) 
             Log[1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta]] + (
              Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
                Log[1 + $CellContext`\[Beta] - (
                   2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
                1 - $CellContext`\[Beta] + (
                   2 $CellContext`x) $CellContext`\[Beta]])) 
             Log[1 - $CellContext`\[Beta]^2 + ((
                  4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + (Rational[-1, 4]/$CellContext`\[Beta]) 
             PolyLog[2, 
               Rational[
                1, 2] + (
                 Rational[-1, 2] (1 - 
                  2 $CellContext`x)) $CellContext`\[Beta]] + (
              Rational[1, 4]/$CellContext`\[Beta]) 
             PolyLog[2, 
               Rational[1, 2] (
                1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta])]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"QuadraticQ\", \"[\", RowBox[{RowBox[{\"{\
\", RowBox[{\"Qx\", \",\", \"Px\"}], \"}\"}], \",\", \"x\"}], \"]\"}], \
\"&&\", RowBox[{\"EqQ\", \"[\", RowBox[{RowBox[{SubscriptBox[\"\[PartialD]\", \
RowBox[{\"x\"}]], FractionBox[\"Px\", \"Qx\"]}], \",\", \"0\"}], \"]\"}]}]\) \
let \!\(\*RowBox[{\"u\", \"=\", RowBox[{\"IntHide\", \"[\", \
RowBox[{FractionBox[\"1\", \"Qx\"], \",\", \"x\"}], \"]\"}]}]\), then", 
          HoldComplete[
           Integrate[
           Log[$CellContext`c \
$CellContext`Px^$CellContext`n]/$CellContext`Qx, $CellContext`x]], 
          
          HoldComplete[$CellContext`u 
            Log[$CellContext`c $CellContext`Px^$CellContext`n] - 
           Rubi`Dist[$CellContext`n, 
            Integrate[
             $CellContext`SimplifyIntegrand[($CellContext`u 
               D[$CellContext`Px, $CellContext`x])/$CellContext`Px, \
$CellContext`x], $CellContext`x], $CellContext`x]], 2607], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[(
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] - 
           Rubi`Int[(((1 - 2 $CellContext`x) $CellContext`\[Beta])/(
             1 - $CellContext`\[Beta]^2 + (
               4 $CellContext`x) $CellContext`\[Beta]^2 - (
              4 $CellContext`x^2) $CellContext`\[Beta]^2)) (-
              Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]] + 
             Log[1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta]]), $CellContext`x]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"!\", RowBox[{\"MatchQ\", \"[\", RowBox[{\"u\", \
\",\", RowBox[{RowBox[{\"b_\", \" \", \"v_\"}], \"/;\", RowBox[{\"FreeQ\", \
\"[\", RowBox[{\"b\", \",\", \"x\"}], \"]\"}]}]}], \"]\"}]}]\)", 
          HoldComplete[
           Integrate[$CellContext`a $CellContext`u, $CellContext`x]], 
          HoldComplete[
           Rubi`Dist[$CellContext`a, 
            Integrate[$CellContext`u, $CellContext`x], $CellContext`x]], 12], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[(
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] - Rubi`Dist[$CellContext`\[Beta], 
            
            Rubi`Int[((1 - 2 $CellContext`x)/(
              1 - $CellContext`\[Beta]^2 + (
                4 $CellContext`x) $CellContext`\[Beta]^2 - (
               4 $CellContext`x^2) $CellContext`\[Beta]^2)) (-
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] + 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]]), $CellContext`x], \
$CellContext`x]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"EqQ\", \"[\", RowBox[{\"n2\", \",\", \
RowBox[{\"2\", \" \", \"n\"}]}], \"]\"}], \"&&\", RowBox[{\"IGtQ\", \"[\", \
RowBox[{\"n\", \",\", \"0\"}], \"]\"}]}]\) let \!\(\*RowBox[{\"v\", \"=\", \
RowBox[{\"RationalFunctionExpand\", \"[\", RowBox[{FractionBox[\"u\", \
RowBox[{\"a\", \"+\", RowBox[{\"b\", \" \", SuperscriptBox[\"x\", \"n\"]}], \
\"+\", RowBox[{\"c\", \" \", SuperscriptBox[\"x\", RowBox[{\"2\", \" \", \
\"n\"}]]}]}]], \",\", \"x\"}], \"]\"}]}]\), then if \!\(\*RowBox[{\"SumQ\", \
\"[\", \"v\", \"]\"}]\)", 
          HoldComplete[
           
           Integrate[$CellContext`u/($CellContext`a + $CellContext`b \
$CellContext`x^$CellContext`n + $CellContext`c \
$CellContext`x^$CellContext`n2), $CellContext`x]], 
          HoldComplete[
           Integrate[$CellContext`v, $CellContext`x]], 6860], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[(
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) Log[
               1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] - Rubi`Dist[$CellContext`\[Beta], 
            
            Rubi`Int[((-(-1 + 
                 2 $CellContext`x))/(-1 + $CellContext`\[Beta]^2 - (
                4 $CellContext`x) $CellContext`\[Beta]^2 + (
                 4 $CellContext`x^2) $CellContext`\[Beta]^2)) 
              Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]] + ((-1 + 
                2 $CellContext`x)/(-1 + $CellContext`\[Beta]^2 - (
                4 $CellContext`x) $CellContext`\[Beta]^2 + (
                 4 $CellContext`x^2) $CellContext`\[Beta]^2)) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Rubi`Int[$CellContext`a $CellContext`u + $CellContext`b \
$CellContext`v + $CellContext`\[CenterEllipsis], $CellContext`x]], 
          
          HoldComplete[$CellContext`a 
            Integrate[$CellContext`u, $CellContext`x] + $CellContext`b 
            Integrate[$CellContext`v, $CellContext`x] + $CellContext`\
\[CenterEllipsis]]], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[(
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[$CellContext`\[Beta], 
             
             Rubi`Int[((-1 + 
                2 $CellContext`x)/(-1 + $CellContext`\[Beta]^2 - (
                4 $CellContext`x) $CellContext`\[Beta]^2 + (
                 4 $CellContext`x^2) $CellContext`\[Beta]^2)) 
              Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] - Rubi`Dist[$CellContext`\[Beta], 
            
            Rubi`Int[((-1 + 2 $CellContext`x)/(-1 + $CellContext`\[Beta]^2 - (
               4 $CellContext`x) $CellContext`\[Beta]^2 + (
                4 $CellContext`x^2) $CellContext`\[Beta]^2)) 
             Log[1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"RationalFunctionQ\", \"[\", \
RowBox[{\"RFx\", \",\", \"x\"}], \"]\"}], \"&&\", RowBox[{\"IntegerQ\", \
\"[\", \"p\", \"]\"}]}]\) let \!\(\*RowBox[{\"u\", \"=\", \
RowBox[{\"ExpandIntegrand\", \"[\", RowBox[{SuperscriptBox[RowBox[{\"(\", \
RowBox[{\"a\", \"+\", RowBox[{\"b\", \" \", RowBox[{\"Log\", \"[\", \
RowBox[{\"c\", \" \", SuperscriptBox[RowBox[{\"(\", RowBox[{\"d\", \"+\", \
RowBox[{\"e\", \" \", \"x\"}]}], \")\"}], \"n\"]}], \"]\"}]}]}], \")\"}], \"p\
\"], \",\", \"RFx\", \",\", \"x\"}], \"]\"}]}]\), then if \
\!\(\*RowBox[{\"SumQ\", \"[\", \"u\", \"]\"}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
              Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)^$CellContext`n] $CellContext`b)^$CellContext`p \
$CellContext`RFx, $CellContext`x]], 
          HoldComplete[
           Integrate[$CellContext`u, $CellContext`x]], 2465], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"RationalFunctionQ\", \"[\", \
RowBox[{\"RFx\", \",\", \"x\"}], \"]\"}], \"&&\", RowBox[{\"IntegerQ\", \
\"[\", \"p\", \"]\"}]}]\) let \!\(\*RowBox[{\"u\", \"=\", \
RowBox[{\"ExpandIntegrand\", \"[\", RowBox[{SuperscriptBox[RowBox[{\"(\", \
RowBox[{\"a\", \"+\", RowBox[{\"b\", \" \", RowBox[{\"Log\", \"[\", \
RowBox[{\"c\", \" \", SuperscriptBox[RowBox[{\"(\", RowBox[{\"d\", \"+\", \
RowBox[{\"e\", \" \", \"x\"}]}], \")\"}], \"n\"]}], \"]\"}]}]}], \")\"}], \"p\
\"], \",\", \"RFx\", \",\", \"x\"}], \"]\"}]}]\), then if \
\!\(\*RowBox[{\"SumQ\", \"[\", \"u\", \"]\"}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
              Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)^$CellContext`n] $CellContext`b)^$CellContext`p \
$CellContext`RFx, $CellContext`x]], 
          HoldComplete[
           Integrate[$CellContext`u, $CellContext`x]], 2465], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[(
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[$CellContext`\[Beta], 
             
             Rubi`Int[(2/((-4) $CellContext`\[Beta] - 
                4 $CellContext`\[Beta]^2 + (
                  8 $CellContext`x) $CellContext`\[Beta]^2)) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] + (2/(
                4 $CellContext`\[Beta] - 
                4 $CellContext`\[Beta]^2 + (
                  8 $CellContext`x) $CellContext`\[Beta]^2)) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] - Rubi`Dist[$CellContext`\[Beta], 
            
            Rubi`Int[(2/((-4) $CellContext`\[Beta] - 
               4 $CellContext`\[Beta]^2 + (
                 8 $CellContext`x) $CellContext`\[Beta]^2)) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]] + (2/(
               4 $CellContext`\[Beta] - 
               4 $CellContext`\[Beta]^2 + (
                 8 $CellContext`x) $CellContext`\[Beta]^2)) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Rubi`Int[$CellContext`a $CellContext`u + $CellContext`b \
$CellContext`v + $CellContext`\[CenterEllipsis], $CellContext`x]], 
          
          HoldComplete[$CellContext`a 
            Integrate[$CellContext`u, $CellContext`x] + $CellContext`b 
            Integrate[$CellContext`v, $CellContext`x] + $CellContext`\
\[CenterEllipsis]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Rubi`Int[$CellContext`a $CellContext`u + $CellContext`b \
$CellContext`v + $CellContext`\[CenterEllipsis], $CellContext`x]], 
          
          HoldComplete[$CellContext`a 
            Integrate[$CellContext`u, $CellContext`x] + $CellContext`b 
            Integrate[$CellContext`v, $CellContext`x] + $CellContext`\
\[CenterEllipsis]]], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[(
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[2 $CellContext`\[Beta], 
             
             Rubi`Int[((-4) $CellContext`\[Beta] - 
                4 $CellContext`\[Beta]^2 + (
                  8 $CellContext`x) $CellContext`\[Beta]^2)^(-1) 
              Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] + Rubi`Dist[2 $CellContext`\[Beta], 
             
             Rubi`Int[(4 $CellContext`\[Beta] - 
                4 $CellContext`\[Beta]^2 + (
                  8 $CellContext`x) $CellContext`\[Beta]^2)^(-1) 
              Log[1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] - Rubi`Dist[2 $CellContext`\[Beta], 
            
            Rubi`Int[((-4) $CellContext`\[Beta] - 
               4 $CellContext`\[Beta]^2 + (
                 8 $CellContext`x) $CellContext`\[Beta]^2)^(-1) 
             Log[1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x] - Rubi`Dist[2 $CellContext`\[Beta], 
            
            Rubi`Int[(4 $CellContext`\[Beta] - 
               4 $CellContext`\[Beta]^2 + (
                 8 $CellContext`x) $CellContext`\[Beta]^2)^(-1) 
             Log[1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x], \
$CellContext`x]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"EqQ\", \"[\", RowBox[{RowBox[{RowBox[{\"e\", \" \
\", \"f\"}], \"-\", RowBox[{\"d\", \" \", \"g\"}]}], \",\", \"0\"}], \
\"]\"}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
              Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)^$CellContext`n] $CellContext`b)^$CellContext`p \
($CellContext`f + $CellContext`g $CellContext`x)^$CellContext`q, \
$CellContext`x]], 
          HoldComplete[
           Rubi`Dist[1/$CellContext`e, 
            Rubi`Subst[
             
             Integrate[(($CellContext`f \
$CellContext`x)/$CellContext`d)^$CellContext`q ($CellContext`a + \
$CellContext`b 
                 Log[$CellContext`c \
$CellContext`x^$CellContext`n])^$CellContext`p, $CellContext`x], \
$CellContext`x, $CellContext`d + $CellContext`e $CellContext`x], \
$CellContext`x]], 2437], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"NeQ\", \"[\", RowBox[{RowBox[{RowBox[{\"e\", \" \
\", \"f\"}], \"-\", RowBox[{\"d\", \" \", \"g\"}]}], \",\", \"0\"}], \
\"]\"}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
             Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)^$CellContext`n] $CellContext`b)/($CellContext`f + \
$CellContext`g $CellContext`x), $CellContext`x]], 
          
          HoldComplete[(
             Log[($CellContext`e ($CellContext`f + $CellContext`g \
$CellContext`x))/($CellContext`e $CellContext`f - $CellContext`d \
$CellContext`g)] ($CellContext`a + $CellContext`b 
               Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)^$CellContext`n]))/$CellContext`g - 
           Rubi`Dist[(($CellContext`b $CellContext`e) \
$CellContext`n)/$CellContext`g, 
            Integrate[
            Log[($CellContext`e ($CellContext`f + $CellContext`g \
$CellContext`x))/($CellContext`e $CellContext`f - $CellContext`d \
$CellContext`g)]/($CellContext`d + $CellContext`e $CellContext`x), \
$CellContext`x], $CellContext`x]], 2441], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"NeQ\", \"[\", RowBox[{RowBox[{RowBox[{\"e\", \" \
\", \"f\"}], \"-\", RowBox[{\"d\", \" \", \"g\"}]}], \",\", \"0\"}], \
\"]\"}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
             Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)^$CellContext`n] $CellContext`b)/($CellContext`f + \
$CellContext`g $CellContext`x), $CellContext`x]], 
          
          HoldComplete[(
             Log[($CellContext`e ($CellContext`f + $CellContext`g \
$CellContext`x))/($CellContext`e $CellContext`f - $CellContext`d \
$CellContext`g)] ($CellContext`a + $CellContext`b 
               Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)^$CellContext`n]))/$CellContext`g - 
           Rubi`Dist[(($CellContext`b $CellContext`e) \
$CellContext`n)/$CellContext`g, 
            Integrate[
            Log[($CellContext`e ($CellContext`f + $CellContext`g \
$CellContext`x))/($CellContext`e $CellContext`f - $CellContext`d \
$CellContext`g)]/($CellContext`d + $CellContext`e $CellContext`x), \
$CellContext`x], $CellContext`x]], 2441], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"EqQ\", \"[\", RowBox[{RowBox[{RowBox[{\"e\", \" \
\", \"f\"}], \"-\", RowBox[{\"d\", \" \", \"g\"}]}], \",\", \"0\"}], \
\"]\"}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
              Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)^$CellContext`n] $CellContext`b)^$CellContext`p \
($CellContext`f + $CellContext`g $CellContext`x)^$CellContext`q, \
$CellContext`x]], 
          HoldComplete[
           Rubi`Dist[1/$CellContext`e, 
            Rubi`Subst[
             
             Integrate[(($CellContext`f \
$CellContext`x)/$CellContext`d)^$CellContext`q ($CellContext`a + \
$CellContext`b 
                 Log[$CellContext`c \
$CellContext`x^$CellContext`n])^$CellContext`p, $CellContext`x], \
$CellContext`x, $CellContext`d + $CellContext`e $CellContext`x], \
$CellContext`x]], 2437], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[((Rational[1, 4]/$CellContext`\[Beta]) 
             Log[
              1 + $CellContext`\[Beta] - (
                2 $CellContext`x) $CellContext`\[Beta]]) 
            Log[Rational[1, 2] (
               1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta])] + ((
              Rational[-1, 4]/$CellContext`\[Beta]) 
             Log[Rational[1, 2] (
                1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta])]) 
            Log[1 - $CellContext`\[Beta] + (
                2 $CellContext`x) $CellContext`\[Beta]] + (
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[
             Rational[1, 2], 
             
             Rubi`Int[(
                1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta])^(-1) 
              Log[(2 $CellContext`\[Beta]) (((-4) $CellContext`\[Beta] - 
                  4 $CellContext`\[Beta]^2 + (
                    8 $CellContext`x) $CellContext`\[Beta]^2)/(((-8) (
                    1 - $CellContext`\[Beta])) $CellContext`\[Beta]^2 + (
                   2 $CellContext`\[Beta]) ((-4) $CellContext`\[Beta] - 
                   4 $CellContext`\[Beta]^2)))], $CellContext`x], \
$CellContext`x] + Rubi`Dist[
             Rational[1, 2], 
             
             Rubi`Int[(
                1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta])^(-1) 
              Log[((-2) $CellContext`\[Beta]) ((4 $CellContext`\[Beta] - 
                  4 $CellContext`\[Beta]^2 + (
                    8 $CellContext`x) $CellContext`\[Beta]^2)/(((-8) \
$CellContext`\[Beta]^2) (1 + $CellContext`\[Beta]) - (
                  2 $CellContext`\[Beta]) (4 $CellContext`\[Beta] - 
                  4 $CellContext`\[Beta]^2)))], $CellContext`x], \
$CellContext`x] - Rubi`Subst[
            
            Rubi`Int[(($CellContext`x^(-1) (
                1 + $CellContext`\[Beta]))/((-4) $CellContext`\[Beta] - 
              4 $CellContext`\[Beta]^2)) 
             Log[$CellContext`x], $CellContext`x], $CellContext`x, 
            1 + $CellContext`\[Beta] - (
             2 $CellContext`x) $CellContext`\[Beta]] - Rubi`Subst[
            Rubi`Int[(($CellContext`x^(-1) (1 - $CellContext`\[Beta]))/(
              4 $CellContext`\[Beta] - 4 $CellContext`\[Beta]^2)) 
             Log[$CellContext`x], $CellContext`x], $CellContext`x, 
            1 - $CellContext`\[Beta] + (
              2 $CellContext`x) $CellContext`\[Beta]]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"NeQ\", \"[\", \
RowBox[{RowBox[{RowBox[{\"e\", \" \", \"f\"}], \"-\", RowBox[{\"d\", \" \", \
\"g\"}]}], \",\", \"0\"}], \"]\"}], \"&&\", RowBox[{\"EqQ\", \"[\", \
RowBox[{RowBox[{\"g\", \"+\", RowBox[{\"c\", \" \", RowBox[{\"(\", \
RowBox[{RowBox[{\"e\", \" \", \"f\"}], \"-\", RowBox[{\"d\", \" \", \
\"g\"}]}], \")\"}]}]}], \",\", \"0\"}], \"]\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
             Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)] $CellContext`b)/($CellContext`f + $CellContext`g \
$CellContext`x), $CellContext`x]], 
          HoldComplete[
           Rubi`Dist[1/$CellContext`g, 
            Rubi`Subst[
             
             Integrate[($CellContext`a + $CellContext`b 
                Log[1 + (($CellContext`c $CellContext`e) \
$CellContext`x)/$CellContext`g])/$CellContext`x, $CellContext`x], \
$CellContext`x, $CellContext`f + $CellContext`g $CellContext`x], \
$CellContext`x]], 2440], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"NeQ\", \"[\", \
RowBox[{RowBox[{RowBox[{\"e\", \" \", \"f\"}], \"-\", RowBox[{\"d\", \" \", \
\"g\"}]}], \",\", \"0\"}], \"]\"}], \"&&\", RowBox[{\"EqQ\", \"[\", \
RowBox[{RowBox[{\"g\", \"+\", RowBox[{\"c\", \" \", RowBox[{\"(\", \
RowBox[{RowBox[{\"e\", \" \", \"f\"}], \"-\", RowBox[{\"d\", \" \", \
\"g\"}]}], \")\"}]}]}], \",\", \"0\"}], \"]\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
             Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x)] $CellContext`b)/($CellContext`f + $CellContext`g \
$CellContext`x), $CellContext`x]], 
          HoldComplete[
           Rubi`Dist[1/$CellContext`g, 
            Rubi`Subst[
             
             Integrate[($CellContext`a + $CellContext`b 
                Log[1 + (($CellContext`c $CellContext`e) \
$CellContext`x)/$CellContext`g])/$CellContext`x, $CellContext`x], \
$CellContext`x, $CellContext`f + $CellContext`g $CellContext`x], \
$CellContext`x]], 2440], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"!\", RowBox[{\"MatchQ\", \"[\", RowBox[{\"u\", \
\",\", RowBox[{RowBox[{\"b_\", \" \", \"v_\"}], \"/;\", RowBox[{\"FreeQ\", \
\"[\", RowBox[{\"b\", \",\", \"x\"}], \"]\"}]}]}], \"]\"}]}]\)", 
          HoldComplete[
           Integrate[$CellContext`a $CellContext`u, $CellContext`x]], 
          HoldComplete[
           Rubi`Dist[$CellContext`a, 
            Integrate[$CellContext`u, $CellContext`x], $CellContext`x]], 12], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"!\", RowBox[{\"MatchQ\", \"[\", RowBox[{\"u\", \
\",\", RowBox[{RowBox[{\"b_\", \" \", \"v_\"}], \"/;\", RowBox[{\"FreeQ\", \
\"[\", RowBox[{\"b\", \",\", \"x\"}], \"]\"}]}]}], \"]\"}]}]\)", 
          HoldComplete[
           Integrate[$CellContext`a $CellContext`u, $CellContext`x]], 
          HoldComplete[
           Rubi`Dist[$CellContext`a, 
            Integrate[$CellContext`u, $CellContext`x], $CellContext`x]], 12], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[((Rational[1, 4]/$CellContext`\[Beta]) 
             Log[1 + $CellContext`\[Beta] - (
                2 $CellContext`x) $CellContext`\[Beta]]) 
            Log[Rational[1, 2] (
               1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta])] + ((
              Rational[-1, 4]/$CellContext`\[Beta]) 
             Log[Rational[1, 2] (
                1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta])]) 
            Log[1 - $CellContext`\[Beta] + (
                2 $CellContext`x) $CellContext`\[Beta]] + (
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + Rubi`Dist[Rational[1, 4]/$CellContext`\[Beta], 
             Rubi`Subst[
              
              Rubi`Int[$CellContext`x^(-1) 
               Log[$CellContext`x], $CellContext`x], $CellContext`x, 
              1 + $CellContext`\[Beta] - (
               2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x] - 
           Rubi`Dist[Rational[1, 4]/$CellContext`\[Beta], 
            Rubi`Subst[
             
             Rubi`Int[$CellContext`x^(-1) 
              Log[$CellContext`x], $CellContext`x], $CellContext`x, 
             1 - $CellContext`\[Beta] + (
               2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x] + 
           Rubi`Dist[Rational[1, 4]/$CellContext`\[Beta], 
             Rubi`Subst[
              
              Rubi`Int[$CellContext`x^(-1) 
               Log[1 + (
                   8 $CellContext`x) ($CellContext`\[Beta]^2/(((-8) (
                    1 - $CellContext`\[Beta])) $CellContext`\[Beta]^2 + (
                    2 $CellContext`\[Beta]) ((-4) $CellContext`\[Beta] - 
                    4 $CellContext`\[Beta]^2)))], $CellContext`x], \
$CellContext`x, 
              1 - $CellContext`\[Beta] + (
                2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x] - 
           Rubi`Dist[Rational[1, 4]/$CellContext`\[Beta], 
            Rubi`Subst[
             
             Rubi`Int[$CellContext`x^(-1) 
              Log[1 + (
                  8 $CellContext`x) ($CellContext`\[Beta]^2/(((-8) \
$CellContext`\[Beta]^2) (1 + $CellContext`\[Beta]) - (
                   2 $CellContext`\[Beta]) (4 $CellContext`\[Beta] - 
                   4 $CellContext`\[Beta]^2)))], $CellContext`x], \
$CellContext`x, 
             1 + $CellContext`\[Beta] - (
              2 $CellContext`x) $CellContext`\[Beta]], $CellContext`x]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
             Log[$CellContext`c $CellContext`x^$CellContext`n] \
$CellContext`b)/$CellContext`x, $CellContext`x]], 
          
          HoldComplete[($CellContext`a + $CellContext`b 
              Log[$CellContext`c $CellContext`x^$CellContext`n])^2/((
            2 $CellContext`b) $CellContext`n)], 2338], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Integrate[($CellContext`a + 
             Log[$CellContext`c $CellContext`x^$CellContext`n] \
$CellContext`b)/$CellContext`x, $CellContext`x]], 
          
          HoldComplete[($CellContext`a + $CellContext`b 
              Log[$CellContext`c $CellContext`x^$CellContext`n])^2/((
            2 $CellContext`b) $CellContext`n)], 2338], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"EqQ\", \"[\", RowBox[{RowBox[{\"c\", \" \", \
\"d\"}], \",\", \"1\"}], \"]\"}]\)", 
          HoldComplete[
           Integrate[
           Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x^$CellContext`n)]/$CellContext`x, $CellContext`x]], 
          
          HoldComplete[-(
            PolyLog[2, -(($CellContext`c $CellContext`e) \
$CellContext`x^$CellContext`n)]/$CellContext`n)], 2438], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{\"EqQ\", \"[\", RowBox[{RowBox[{\"c\", \" \", \
\"d\"}], \",\", \"1\"}], \"]\"}]\)", 
          HoldComplete[
           Integrate[
           Log[$CellContext`c ($CellContext`d + $CellContext`e \
$CellContext`x^$CellContext`n)]/$CellContext`x, $CellContext`x]], 
          
          HoldComplete[-(
            PolyLog[2, -(($CellContext`c $CellContext`e) \
$CellContext`x^$CellContext`n)]/$CellContext`n)], 2438], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[(Rational[-1, 8]/$CellContext`\[Beta]) 
            Log[1 - (1 - 2 $CellContext`x) $CellContext`\[Beta]]^2 + (
             Rational[1, 8]/$CellContext`\[Beta]) 
            Log[1 + $CellContext`\[Beta] - (
                2 $CellContext`x) $CellContext`\[Beta]]^2 + ((
              Rational[1, 4]/$CellContext`\[Beta]) 
             Log[1 + $CellContext`\[Beta] - (
                2 $CellContext`x) $CellContext`\[Beta]]) 
            Log[Rational[1, 2] (
               1 - $CellContext`\[Beta] + (
                 2 $CellContext`x) $CellContext`\[Beta])] + ((
              Rational[-1, 4]/$CellContext`\[Beta]) 
             Log[Rational[1, 2] (
                1 + $CellContext`\[Beta] - (
                 2 $CellContext`x) $CellContext`\[Beta])]) 
            Log[1 - $CellContext`\[Beta] + (
                2 $CellContext`x) $CellContext`\[Beta]] + (
             Rational[-1, 4] ($CellContext`\[Beta]^(-1) 
               Log[1 + $CellContext`\[Beta] - (
                  2 $CellContext`x) $CellContext`\[Beta]] - $CellContext`\
\[Beta]^(-1) 
              Log[1 - $CellContext`\[Beta] + (
                  2 $CellContext`x) $CellContext`\[Beta]])) 
            Log[1 - $CellContext`\[Beta]^2 + ((
                 4 (1 - $CellContext`x)) $CellContext`x) \
$CellContext`\[Beta]^2] + (Rational[-1, 4]/$CellContext`\[Beta]) 
            PolyLog[2, 
              Rational[
               1, 2] + (
                Rational[-1, 2] (1 - 
                 2 $CellContext`x)) $CellContext`\[Beta]] + (
             Rational[1, 4]/$CellContext`\[Beta]) 
            PolyLog[2, 
              Rational[1, 2] (
               1 + $CellContext`\[Beta] - (
                2 $CellContext`x) $CellContext`\[Beta])]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.7682609031200857`*^9, 3.805658607716645*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"c2ec4605-8c77-4f3d-bf42-1f146c01f640"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]"}]}], "]"}], "2"], 
    RowBox[{"8", " ", "\[Beta]"}]]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]", "-", 
      RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "2"], 
   RowBox[{"8", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]", "-", 
      RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Beta]", "+", 
        RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Beta]", "-", 
        RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]", "+", 
      RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "\[Beta]", "-", 
        RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "\[Beta]"], "-", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "\[Beta]", "+", 
        RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "\[Beta]"]}], ")"}],
    " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[Beta]", "2"], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      FractionBox["1", "2"], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]"}]}]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Beta]", "-", 
        RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{3.7682609043232017`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"83a1067b-90bd-48cf-ac7f-ce25afa48ffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"F", "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]"}]}], "]"}], "2"], 
     RowBox[{"8", " ", "\[Beta]"}]]}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", "\[Beta]", "-", 
       RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "2"], 
    RowBox[{"8", " ", "\[Beta]"}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", "\[Beta]", "-", 
       RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Beta]", "+", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}]}], 
    RowBox[{"4", " ", "\[Beta]"}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Beta]", "-", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "\[Beta]", "+", 
       RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
    RowBox[{"4", " ", "\[Beta]"}]], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", "\[Beta]", "-", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "\[Beta]"], "-", 
      FractionBox[
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "\[Beta]", "+", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "\[Beta]"]}], 
     ")"}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Beta]", "2"], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "-", 
   FractionBox[
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]"}]}]}], "]"}], 
    RowBox[{"4", " ", "\[Beta]"}]], "+", 
   FractionBox[
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Beta]", "-", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}]}], "]"}], 
    RowBox[{"4", " ", "\[Beta]"}]]}]}]}], "Input",
 CellChangeTimes->{{3.7682609353325415`*^9, 3.7682609556516523`*^9}, {
  3.7682610191649933`*^9, 3.768261021568215*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c587c7c9-cbd9-41b2-886a-d54b0429a790"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"8", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]"}], "]"}], " ", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "\[Beta]"}], "2"], "]"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "-", "\[Beta]"}], "2"], "]"}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"8", " ", "\[Beta]"}]], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "\[Beta]"}], "]"}], "\[Beta]"], "-", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "\[Beta]"}], "]"}], "\[Beta]"]}], ")"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[Beta]", "2"]}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox["\[Beta]", "2"]}]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{3.7682609617430983`*^9, 3.768261024329886*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"e457ab29-cd29-42ee-b7d9-2c39edc49409"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"G", "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]"}]}], "]"}], "2"], 
     RowBox[{"8", " ", "\[Beta]"}]]}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", "\[Beta]", "-", 
       RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "2"], 
    RowBox[{"8", " ", "\[Beta]"}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", "\[Beta]", "-", 
       RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Beta]", "+", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}]}], 
    RowBox[{"4", " ", "\[Beta]"}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Beta]", "-", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}], "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "\[Beta]", "+", 
       RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}]}], 
    RowBox[{"4", " ", "\[Beta]"}]], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", "\[Beta]", "-", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "\[Beta]"], "-", 
      FractionBox[
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "\[Beta]", "+", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], "]"}], "\[Beta]"]}], 
     ")"}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Beta]", "2"], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "]"}]}], "-", 
   FractionBox[
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "x"}]}], ")"}], " ", "\[Beta]"}]}]}], "]"}], 
    RowBox[{"4", " ", "\[Beta]"}]], "+", 
   FractionBox[
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Beta]", "-", 
         RowBox[{"2", " ", "x", " ", "\[Beta]"}]}], ")"}]}]}], "]"}], 
    RowBox[{"4", " ", "\[Beta]"}]]}]}]}], "Input",
 CellChangeTimes->{{3.768260980344903*^9, 3.7682610049772525`*^9}, {
  3.768261056764987*^9, 3.7682610573600492`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e693f77e-25d1-45b7-ab44-de3e461716b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"], 
    RowBox[{"8", " ", "\[Beta]"}]]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]"}], "]"}], " ", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "\[Beta]"}], "2"], "]"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "-", "\[Beta]"}], "2"], "]"}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"8", " ", "\[Beta]"}]], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "\[Beta]"}], "]"}], "\[Beta]"]}], "+", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "\[Beta]"}], "]"}], "\[Beta]"]}], ")"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[Beta]", "2"]}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox["\[Beta]", "2"]}]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "+", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{3.7682610066046963`*^9, 3.7682610603044343`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"a05b01f1-17c3-4850-a5cd-54767daa73ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", "-", "G"}]], "Input",
 CellChangeTimes->{{3.7682610710126276`*^9, 3.768261074289488*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"1d45dd2c-e11d-48c5-ba92-0bf326353e98"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]"}], "]"}], " ", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "\[Beta]"}], "2"], "]"}]}], 
   RowBox[{"2", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "-", "\[Beta]"}], "2"], "]"}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}]}], 
   RowBox[{"2", " ", "\[Beta]"}]], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"4", " ", "\[Beta]"}]], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "\[Beta]"}], "]"}], "\[Beta]"], "-", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "\[Beta]"}], "]"}], "\[Beta]"]}], ")"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[Beta]", "2"]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "\[Beta]"}], "]"}], "\[Beta]"]}], "+", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "\[Beta]"}], "]"}], "\[Beta]"]}], ")"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[Beta]", "2"]}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox["\[Beta]", "2"]}]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox["\[Beta]", "2"]}]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "+", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"4", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{3.7682610749833946`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"d5cdcbf5-cf99-430f-8ad6-6bd7629faf27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "-", "G"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7682610798347836`*^9, 3.7682610897961483`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2648b90b-c660-47f2-bc9e-a2f62ad0744b"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"ArcTanh", "[", "\[Beta]", "]"}], " ", 
    RowBox[{"Log", "[", "16", "]"}]}], "-", 
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], "+", 
   RowBox[{"2", " ", 
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      FractionBox[
       RowBox[{"1", "-", "\[Beta]"}], "2"]}], "]"}]}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      FractionBox[
       RowBox[{"1", "+", "\[Beta]"}], "2"]}], "]"}]}]}], 
  RowBox[{"4", " ", "\[Beta]"}]]], "Output",
 CellChangeTimes->{3.768261092345153*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"1c6861b0-84c7-44f9-ab1f-65c5d901d321"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", "\[Beta]"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"PowerExpand", "[", 
     RowBox[{
      RowBox[{"TrigToExp", "[", 
       RowBox[{
        RowBox[{"ArcTanh", "[", "\[Beta]", "]"}], " ", 
        RowBox[{"Log", "[", "16", "]"}]}], "]"}], "//", "Simplify"}], "]"}], 
    "-", 
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], "+", 
    RowBox[{"2", " ", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       FractionBox[
        RowBox[{"1", "-", "\[Beta]"}], "2"]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       FractionBox[
        RowBox[{"1", "+", "\[Beta]"}], "2"]}], "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7682611224678855`*^9, 3.768261216163849*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"9b93623d-bde1-4a29-9388-da30818511b9"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"]}], "+", 
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], "+", 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "2", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "\[Beta]"}], "]"}]}], "+", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "\[Beta]"}], "]"}]}], ")"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      FractionBox[
       RowBox[{"1", "-", "\[Beta]"}], "2"]}], "]"}]}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      FractionBox[
       RowBox[{"1", "+", "\[Beta]"}], "2"]}], "]"}]}]}], 
  RowBox[{"4", " ", "\[Beta]"}]]], "Output",
 CellChangeTimes->{
  3.7682611633826776`*^9, {3.768261206033746*^9, 3.7682612512967176`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"58f3d368-3334-45a4-8311-7246dd04f37f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.76826125324267*^9, 3.76826125674917*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"68af3243-15d2-4a31-8395-f742fa4516a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"Log", "[", "2", "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "\[Beta]"}], "]"}]}], 
    RowBox[{"2", " ", "\[Beta]"}]]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", "2", "]"}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}]}], 
   RowBox[{"2", " ", "\[Beta]"}]], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"2", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "+", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"2", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{3.7682612571645203`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"0affc47c-e214-4247-8dad-90a127294dbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Factor", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"Log", "[", "2", "]"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "\[Beta]"}], "]"}]}], 
      RowBox[{"2", " ", "\[Beta]"}]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "\[Beta]"}], "]"}]}], 
     RowBox[{"2", " ", "\[Beta]"}]]}], "]"}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"2", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "+", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"2", " ", "\[Beta]"}]]}]], "Input",
 CellChangeTimes->{{3.768261299239485*^9, 3.768261314261916*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0b46561a-9173-4475-b734-60484877a783"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "\[Beta]"}], "]"}], "2"], 
    RowBox[{"4", " ", "\[Beta]"}]]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", "2", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "\[Beta]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "\[Beta]"}], "]"}]}], ")"}]}], 
   RowBox[{"2", " ", "\[Beta]"}]], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "\[Beta]"}], "]"}], "2"], 
   RowBox[{"4", " ", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"2", " ", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{"PolyLog", "[", 
    RowBox[{"2", ",", 
     FractionBox[
      RowBox[{"1", "+", "\[Beta]"}], "2"]}], "]"}], 
   RowBox[{"2", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{3.768261317262205*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"e5965d55-9b6d-4760-9ded-914bc5fa53e3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7682614218353977`*^9, 
  3.7682614234997888`*^9}},ExpressionUUID->"848a933f-08c1-4ff8-a796-\
9536b7965c98"]
},
WindowSize->{1384, 733},
WindowMargins->{{Automatic, 69}, {Automatic, 48}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 193, 3, 43, "Input",ExpressionUUID->"c5fe284c-1ffc-429f-b925-f471ee07243d"],
Cell[CellGroupData[{
Cell[776, 27, 837, 23, 88, "Input",ExpressionUUID->"72fe0721-199a-4e93-8ea6-1b3c0c02f966"],
Cell[1616, 52, 251927, 5834, 3661, "Print",ExpressionUUID->"c2ec4605-8c77-4f3d-bf42-1f146c01f640"],
Cell[253546, 5888, 2722, 83, 219, "Output",ExpressionUUID->"83a1067b-90bd-48cf-ac7f-ce25afa48ffd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256305, 5976, 2972, 87, 278, "Input",ExpressionUUID->"c587c7c9-cbd9-41b2-886a-d54b0429a790"],
Cell[259280, 6065, 1730, 55, 151, "Output",ExpressionUUID->"e457ab29-cd29-42ee-b7d9-2c39edc49409"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261047, 6125, 3030, 88, 307, "Input",ExpressionUUID->"e693f77e-25d1-45b7-ab44-de3e461716b7"],
Cell[264080, 6215, 1780, 57, 151, "Output",ExpressionUUID->"a05b01f1-17c3-4850-a5cd-54767daa73ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265897, 6277, 196, 3, 43, "Input",ExpressionUUID->"1d45dd2c-e11d-48c5-ba92-0bf326353e98"],
Cell[266096, 6282, 2513, 82, 151, "Output",ExpressionUUID->"d5cdcbf5-cf99-430f-8ad6-6bd7629faf27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268646, 6369, 233, 4, 43, "Input",ExpressionUUID->"2648b90b-c660-47f2-bc9e-a2f62ad0744b"],
Cell[268882, 6375, 818, 24, 83, "Output",ExpressionUUID->"1c6861b0-84c7-44f9-ab1f-65c5d901d321"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269737, 6404, 1033, 30, 133, "Input",ExpressionUUID->"9b93623d-bde1-4a29-9388-da30818511b9"],
Cell[270773, 6436, 1071, 32, 83, "Output",ExpressionUUID->"58f3d368-3334-45a4-8311-7246dd04f37f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271881, 6473, 202, 3, 43, "Input",ExpressionUUID->"68af3243-15d2-4a31-8395-f742fa4516a5"],
Cell[272086, 6478, 1195, 38, 83, "Output",ExpressionUUID->"0affc47c-e214-4247-8dad-90a127294dbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273318, 6521, 1289, 40, 87, "Input",ExpressionUUID->"0b46561a-9173-4475-b734-60484877a783"],
Cell[274610, 6563, 1134, 36, 83, "Output",ExpressionUUID->"e5965d55-9b6d-4760-9ded-914bc5fa53e3"]
}, Open  ]],
Cell[275759, 6602, 156, 3, 43, "Input",ExpressionUUID->"848a933f-08c1-4ff8-a796-9536b7965c98"]
}
]
*)

